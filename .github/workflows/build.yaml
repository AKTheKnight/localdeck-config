on: push

name: "Build and Publish"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: "${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}"
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install -r

      - name: Get version
        id: version
        run: echo version=$(node -p -e "require('./packages/localdeck-configurator/package.json').version") >> $GITHUB_ENV

      - name: Build
        run: |
          pnpm --filter=localdeck-configurator build
          mkdir -p .temp
          cp -r ./packages/localdeck-configurator/{.output,homeassistant}/* ./.temp
          sed -i "s/VERSION/${{ env.version }}/g" ./.temp/config.yaml
      - uses: actions/upload-artifact@v4
        with:
          name: localdeck-configurator
          path: .temp

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: actions/download-artifact@v4
        with:
          name: localdeck-configurator
          path: localdeck-configurator

      - name: Publish
        uses: localbytes/home-assistant-builder@master
        with:
          args: --load --all --target localdeck-configurator
