on:
  push:
    branches:
      - main
  pull_request:

name: "Build and Publish"

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  build-js:
    name: Build JS
    runs-on: ubuntu-latest

    outputs:
      version: ${{ env.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js & Cache Dependencies
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: pnpm install -r

      - name: Get version
        id: version
        run: |
          describe=$(git describe --tags | sed 's/^v//')
          echo "describe=${describe}" >> $GITHUB_ENV
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            echo "version=$(node -p -e 'require(\"./packages/localdeck-configurator/package.json\").version')" >> $GITHUB_ENV
          else
            echo "version=${describe}" >> $GITHUB_ENV
          fi

      - name: Build
        run: |
          sed -i "s/VERSION/${{ env.version }}/g" ./packages/localdeck-configurator/homeassistant/config.yaml
          sed -i "s/:latest/:${{ env.describe }}/g" ./packages/localdeck-configurator/homeassistant/config.yaml
          pnpm build
          mkdir -p .temp
          cp -r ./packages/localdeck-configurator/{.output,homeassistant}/* ./.temp
      - uses: actions/upload-artifact@v4
        with:
          name: localdeck-configurator
          path: .temp

      - uses: actions/upload-artifact@v4
        with:
          name: localdeck-configurator-hass
          path: ./packages/localdeck-configurator/homeassistant


  build-docker:
    name: Build Docker
    needs: [ build-js ]
    runs-on: ubuntu-latest

    env:
      version: ${{ needs.build-js.outputs.version }}

    steps:
      - name: Setup Env
        id: setup-env
        run: |
          ghcr_user=${GITHUB_REPOSITORY_OWNER@L}
          echo "ghcr_user=${ghcr_user}" >> "${GITHUB_ENV}"
          echo "tag=ghcr.io/${ghcr_user}/hass-localdeck-configurator-{arch}:${{ env.version }}" >> "${GITHUB_OUTPUT}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: actions/download-artifact@v4
        with:
          name: localdeck-configurator
          path: localdeck-configurator

      - uses: home-assistant/builder@master
        with:
          args: |
            --all \
            --target localdeck-configurator \
            -i ghcr.io/${{ env.ghcr_user }}/hass-localdeck-configurator-{arch} \
            --version ${{ env.version }} \

#  publish-subtree:
#    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#    needs: [ build ]
#    runs-on: ubuntu-latest
#    steps:
#
#      - uses: actions/download-artifact@v4
#        with:
#          name: localdeck-configurator
#          path: localdeck-configurator
#
#      - name: Pushes to another repository
#        uses: cpina/github-action-push-to-another-repository@main
#        env:
#          SSH_DEPLOY_KEY: ${{ secrets.SSH_LOCALBYTES_HELLO }}
#        with:
#          source-directory: 'localdeck-configurator'
#          target-directory: 'localdeck-configurator'
#
#          destination-github-username: '${{ github.repository_owner }}'
#          destination-repository-name: 'hass-addons'
#
#          user-name: "LocalBytes Bot"
#          user-email: "hello@mylocalbytes.com"
#          target-branch: main
